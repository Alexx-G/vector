name: ci
on:
  push:
    branches:
    - master
  pull_request: {}
jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: EmbarkStudios/cargo-deny-action@v0
      with:
        command: "check advisories"
  test-behavior:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: "cd tests && make test-behavior"
  check-component-features:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: "cd tests && make check-component-features"

# Kubernetes
  build-vector-kubernetes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --no-default-features  --features "sources-kubernetes transforms-kubernetes sinks-console"
    - name: Save vector
      uses: actions/upload-artifact@v1
      with:
        name: builds
        path: ./target/release/vector
  test-kubernetes:
    needs: build-vector-kubernetes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kube: [v1.17.2] #[v1.13.2, v1.14.10, v1.17.2]
    steps:
    - name: Load vector
      uses: actions/download-artifact@v1
      with:
        name: builds
    - uses: opsgang/ga-setup-minikube@v0.1.1
      with:
        minikube-version: 1.7.3
    - name: Start minikube
      run: sudo CHANGE_MINIKUBE_NONE_USER=true /home/runner/bin/minikube start --vm-driver=none --kubernetes-version=${{ matrix.kube }}
    - name: Build image
      run: |
        eval $(minikube docker-env)
        docker build -t "vector_test:local" -f - . << EOF
        FROM buildpack-deps:18.04-curl
        COPY ./builds/vector /usr/local/bin
        ENTRYPOINT ["/usr/local/bin/vector"]
        EOF
    - uses: actions/checkout@v2
    - name: Run kubernetes integration tests
      run: KUBE_TEST_IMAGE=vector_test:local cargo test --lib --features "sources-kubernetes transforms-kubernetes kubernetes-integration-tests" -- --test-threads=1 kubernetes
