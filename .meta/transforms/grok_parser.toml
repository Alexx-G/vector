[transforms.grok_parser]
title = "Grok Parser"
allow_you_to_description = "parse a log field value with [Grok][urls.grok]"
beta = false
common = false
function_category = "parse"
input_types = ["log"]
output_types = ["log"]
requirements = {}

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "grok_parser") %>

[transforms.grok_parser.options.drop_field]
type = "bool"
common = true
default = true
description = """\
If `true` will drop the specified `field` after parsing.\
"""

[transforms.grok_parser.options.field]
type = "string"
common = true
default = "message"
examples = ["message", "parent.child", "array[0]"]
field_path_notation = true
description = """\
The log field to execute the `pattern` against. Must be a `string` value.\
"""

[transforms.grok_parser.options.pattern]
type = "string"
common = true
examples = ["%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}"]
required = true
description = "The [Grok pattern][urls.grok_patterns]"

<%= render("_partials/fields/_types_options.toml", namespace: "transforms.grok_parser.options", common: true) %>

[[transforms.grok_parser.test_examples]]
label = "Basic"
body = """\
[[tests]]
  name = "test_grok_parser"

  [[tests.inputs]]
    insert_at = "my_transform_id"
    type = "raw"
    value = "2020-02-26T12:58:27+00:00 DEBUG hello world this is a test message"

  [[tests.outputs]]
    extract_from = "my_transform_id"
    [[tests.outputs.conditions]]
      type = "check_fields"
      "timestamp.eq" = "2020-02-26T12:58:27+00:00"
      "level.eq" = "DEBUG"
      "message.eq" = "hello world this is a test message"\
"""
